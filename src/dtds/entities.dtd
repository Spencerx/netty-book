<!--
 * Copyright 2011 The Netty Project
 *
 * The Netty Project licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
-->

<!-- Character mnemonic entities -->
<!ENTITY % HTMLlat1    PUBLIC "-//W3C//ENTITIES Latin 1 for XHTML//EN" "xhtml-lat1.ent">
<!ENTITY % HTMLsymbol  PUBLIC "-//W3C//ENTITIES Symbols for XHTML//EN" "xhtml-symbol.ent">
<!ENTITY % HTMLspecial PUBLIC "-//W3C//ENTITIES Special for XHTML//EN" "xhtml-special.ent">

%HTMLlat1;
%HTMLsymbol;
%HTMLspecial;

<!-- Frequently used URLs -->

<!ENTITY Home       "http://netty.io/">
<!ENTITY Downloads  "&Home;Main/Downloads">
<!ENTITY Community  "&Home;Main/Get+Involved">
<!ENTITY DocHome    "http://static.netty.io/4.0/">
<!ENTITY API        "&DocHome;api/io/netty/">
<!ENTITY XRef       "&DocHome;xref/io/netty/">

<!-- Types in the bootstrap package -->

<!ENTITY Bootstrap                "<link xlink:href='&API;bootstrap/Bootstrap.html'><classname>Bootstrap</classname></link>">
<!ENTITY ServerBootstrap          "<link xlink:href='&API;bootstrap/ServerBootstrap.html'><classname>ServerBootstrap</classname></link>">

<!-- Types in the buffer package -->

<!ENTITY ByteBuf            	  "<link xlink:href='&API;buffer/ByteBuf.html'><interfacename>ByteBuf</interfacename></link>">
<!ENTITY ByteBufAllocator      	  "<link xlink:href='&API;buffer/ByteBufAllocator.html'><interfacename>ByteBufAllocator</interfacename></link>">

<!-- Types in the channel package -->

<!ENTITY Channel                                 "<link xlink:href='&API;channel/Channel.html'><interfacename>Channel</interfacename></link>">
<!ENTITY ChannelConfig                           "<link xlink:href='&API;channel/ChannelConfig.html'><interfacename>ChannelConfig</interfacename></link>">
<!ENTITY ChannelFuture                           "<link xlink:href='&API;channel/ChannelFuture.html'><interfacename>ChannelFuture</interfacename></link>">
<!ENTITY ChannelFutureListener                   "<link xlink:href='&API;channel/ChannelFutureListener.html'><interfacename>ChannelFutureListener</interfacename></link>">
<!ENTITY ChannelHandler                          "<link xlink:href='&API;channel/ChannelHandler.html'><interfacename>ChannelHandler</interfacename></link>">
<!ENTITY ChannelHandlerContext                   "<link xlink:href='&API;channel/ChannelHandlerContext.html'><interfacename>ChannelHandlerContext</interfacename></link>">
<!ENTITY ChannelInboundByteHandlerAdapter        "<link xlink:href='&API;channel/ChannelInboundByteHandlerAdapter.html'><classname>ChannelInboundByteHandlerAdapter</classname></link>">
<!ENTITY ChannelInboundMessageHandlerAdapter     "<link xlink:href='&API;channel/ChannelInboundMessageHandlerAdapter.html'><classname>ChannelInboundMessageHandlerAdapter</classname></link>">
<!ENTITY ChannelInitializer                      "<link xlink:href='&API;channel/ChannelInitializer.html'><classname>ChannelInitializer</classname></link>">
<!ENTITY ChannelOutboundMessageHandlerAdapter    "<link xlink:href='&API;channel/ChannelOutboundMessageHandlerAdapter.html'><classname>ChannelOutboundMessageHandlerAdapter</classname></link>">
<!ENTITY ChannelOption            "<link xlink:href='&API;channel/ChannelOption.html'><classname>ChannelOption</classname></link>">
<!ENTITY ChannelPipeline          "<link xlink:href='&API;channel/ChannelPipeline.html'><interfacename>ChannelPipeline</interfacename></link>">
<!ENTITY EventExecutor            "<link xlink:href='&API;channel/EventExecutor.html'><interfacename>EventExecutor</interfacename></link>">
<!ENTITY EventLoopGroup           "<link xlink:href='&API;channel/EventLoopGroup.html'><interfacename>EventLoopGroup</interfacename></link>">

<!-- Types in the channel.group package -->

<!ENTITY ChannelGroup             "<link xlink:href='&API;channel/group/ChannelGroup.html'><interfacename>ChannelGroup</interfacename></link>">
<!ENTITY ChannelGroupFuture       "<link xlink:href='&API;channel/group/ChannelGroupFuture.html'><interfacename>ChannelGroupFuture</interfacename></link>">
<!ENTITY DefaultChannelGroup      "<link xlink:href='&API;channel/group/DefaultChannelGroup.html'><classname>DefaultChannelGroup</classname></link>">

<!-- Types in the channel.socket package -->

<!ENTITY ServerSocketChannel  "<link xlink:href='&API;channel/socket/ServerSocketChannel.html'><interfacename>ServerSocketChannel</interfacename></link>">
<!ENTITY SocketChannel        "<link xlink:href='&API;channel/socket/SocketChannel.html'><interfacename>SocketChannel</interfacename></link>">

<!-- Types in the channel.*.nio package -->
<!ENTITY NioEventLoopGroup       "<link xlink:href='&API;channel/nio/NioEventLoopGroup.html'><classname>NioEventLoopGroup</classname></link>">
<!ENTITY NioServerSocketChannel  "<link xlink:href='&API;channel/socket/nio/NioServerSocketChannel.html'><classname>NioServerSocketChannel</classname></link>">


<!-- Types in the handler.codec.frame package -->

<!ENTITY ByteToMessageDecoder  "<link xlink:href='&API;handler/codec/ByteToMessageDecoder.html'><classname>ByteToMessageDecoder</classname></link>">
<!ENTITY MessageToByteEncoder  "<link xlink:href='&API;handler/codec/MessageToByteEncoder.html'><classname>MessageToByteEncoder</classname></link>">
<!ENTITY ReplayingDecoder      "<link xlink:href='&API;handler/codec/ReplayingDecoder.html'><classname>ReplayingDecoder</classname></link>">


<!-- Types in the handler.codec.protobuf package -->

<!ENTITY ProtobufEncoder  "<link xlink:href='&API;handler/codec/protobuf/ProtobufEncoder.html'><classname>ProtobufEncoder</classname></link>">
<!ENTITY ProtobufDecoder  "<link xlink:href='&API;handler/codec/protobuf/ProtobufDecoder.html'><classname>ProtobufDecoder</classname></link>">


<!-- Types in the handler.ssl package -->
<!ENTITY SslHandler  "<link xlink:href='&API;handler/ssl/SslHandler.html'><classname>SslHandler</classname></link>">
